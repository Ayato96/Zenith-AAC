<?php

class AccountsController extends \BaseController {

	protected $layout = 'public.master';

	/**
	 * Show the form for creating a new account.
	 * GET /account/create
	 *
	 * @return Response
	 */
	public function create() {
		return View::make('accounts.create', array(	
			'title' => 'Create account',
		));
	}

	/**
	 * Remove the specified account from storage.
	 * DELETE /account
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy() {
		$account = Account::find(Session::get('account_id'));
		if (Hash::check(Input::get('password'), $account->getAuthPassword())) {
			$account->delete();
		}
	}

	/**
	 * Show the form fo editing the specified account.
	 * GET /account/edit
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit() {
		
	}

	/**
	 * Display the specified account.
	 * GET /account
	 *
	 * @return Response
	 */
	public function show() {
		$account = Account::find(Session::get('account_id'));
		$account->characters;
		return View::make('accounts.show', array(
			'account' => $account,
			'title' => 'Account management',
		));
	}

	/**
	 * Store a newly created account in storage.
	 * POST /account
	 *
	 * @return Response
	 */
	public function store() {
		$validator = Validator::make(
			array(
				'name' => Input::get('name'),
				'password' => Input::get('password'),
			),
			Account::$rules
		);

		if ($validator->passes()) {
			Account::create(
				array(
					'name' => Input::get('name'),
					'password' => Input::get('password'),
				)
			);
			Redirect::route('session.store')->withInput();
		} else {
			Redirect::back()->withInput()->withErrors($validator);
		}
	}

	/**
	 * Update the specified account in storage.
	 * PUT /account
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update() {
		$account = Account::find(Session::get('account_id'));
		if (Hash::check(Input::get('password'), $account->getAuthPassword())){
			
		}
	}

}
